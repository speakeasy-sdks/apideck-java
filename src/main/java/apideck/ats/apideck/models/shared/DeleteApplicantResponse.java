/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package apideck.ats.apideck.models.shared;

import apideck.ats.apideck.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class DeleteApplicantResponse {

    @JsonProperty("data")
    private UnifiedId data;

    /**
     * Operation performed
     */
    @JsonProperty("operation")
    private String operation;

    /**
     * Unified API resource name
     */
    @JsonProperty("resource")
    private String resource;

    /**
     * Apideck ID of service provider
     */
    @JsonProperty("service")
    private String service;

    /**
     * HTTP Response Status
     */
    @JsonProperty("status")
    private String status;

    /**
     * HTTP Response Status Code
     */
    @JsonProperty("status_code")
    private long statusCode;

    public DeleteApplicantResponse(
            @JsonProperty("data") UnifiedId data,
            @JsonProperty("operation") String operation,
            @JsonProperty("resource") String resource,
            @JsonProperty("service") String service,
            @JsonProperty("status") String status,
            @JsonProperty("status_code") long statusCode) {
        Utils.checkNotNull(data, "data");
        Utils.checkNotNull(operation, "operation");
        Utils.checkNotNull(resource, "resource");
        Utils.checkNotNull(service, "service");
        Utils.checkNotNull(status, "status");
        Utils.checkNotNull(statusCode, "statusCode");
        this.data = data;
        this.operation = operation;
        this.resource = resource;
        this.service = service;
        this.status = status;
        this.statusCode = statusCode;
    }

    public UnifiedId data() {
        return data;
    }

    /**
     * Operation performed
     */
    public String operation() {
        return operation;
    }

    /**
     * Unified API resource name
     */
    public String resource() {
        return resource;
    }

    /**
     * Apideck ID of service provider
     */
    public String service() {
        return service;
    }

    /**
     * HTTP Response Status
     */
    public String status() {
        return status;
    }

    /**
     * HTTP Response Status Code
     */
    public long statusCode() {
        return statusCode;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public DeleteApplicantResponse withData(UnifiedId data) {
        Utils.checkNotNull(data, "data");
        this.data = data;
        return this;
    }

    /**
     * Operation performed
     */
    public DeleteApplicantResponse withOperation(String operation) {
        Utils.checkNotNull(operation, "operation");
        this.operation = operation;
        return this;
    }

    /**
     * Unified API resource name
     */
    public DeleteApplicantResponse withResource(String resource) {
        Utils.checkNotNull(resource, "resource");
        this.resource = resource;
        return this;
    }

    /**
     * Apideck ID of service provider
     */
    public DeleteApplicantResponse withService(String service) {
        Utils.checkNotNull(service, "service");
        this.service = service;
        return this;
    }

    /**
     * HTTP Response Status
     */
    public DeleteApplicantResponse withStatus(String status) {
        Utils.checkNotNull(status, "status");
        this.status = status;
        return this;
    }

    /**
     * HTTP Response Status Code
     */
    public DeleteApplicantResponse withStatusCode(long statusCode) {
        Utils.checkNotNull(statusCode, "statusCode");
        this.statusCode = statusCode;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteApplicantResponse other = (DeleteApplicantResponse) o;
        return 
            java.util.Objects.deepEquals(this.data, other.data) &&
            java.util.Objects.deepEquals(this.operation, other.operation) &&
            java.util.Objects.deepEquals(this.resource, other.resource) &&
            java.util.Objects.deepEquals(this.service, other.service) &&
            java.util.Objects.deepEquals(this.status, other.status) &&
            java.util.Objects.deepEquals(this.statusCode, other.statusCode);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            data,
            operation,
            resource,
            service,
            status,
            statusCode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeleteApplicantResponse.class,
                "data", data,
                "operation", operation,
                "resource", resource,
                "service", service,
                "status", status,
                "statusCode", statusCode);
    }
    
    public final static class Builder {
 
        private UnifiedId data;
 
        private String operation;
 
        private String resource;
 
        private String service;
 
        private String status;
 
        private Long statusCode;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder data(UnifiedId data) {
            Utils.checkNotNull(data, "data");
            this.data = data;
            return this;
        }

        /**
         * Operation performed
         */
        public Builder operation(String operation) {
            Utils.checkNotNull(operation, "operation");
            this.operation = operation;
            return this;
        }

        /**
         * Unified API resource name
         */
        public Builder resource(String resource) {
            Utils.checkNotNull(resource, "resource");
            this.resource = resource;
            return this;
        }

        /**
         * Apideck ID of service provider
         */
        public Builder service(String service) {
            Utils.checkNotNull(service, "service");
            this.service = service;
            return this;
        }

        /**
         * HTTP Response Status
         */
        public Builder status(String status) {
            Utils.checkNotNull(status, "status");
            this.status = status;
            return this;
        }

        /**
         * HTTP Response Status Code
         */
        public Builder statusCode(long statusCode) {
            Utils.checkNotNull(statusCode, "statusCode");
            this.statusCode = statusCode;
            return this;
        }
        
        public DeleteApplicantResponse build() {
            return new DeleteApplicantResponse(
                data,
                operation,
                resource,
                service,
                status,
                statusCode);
        }
    }
}

